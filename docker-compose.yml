services:
  pgdb:
    image: postgres:14
    environment:
      POSTGRES_DB: djaerolith
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
    volumes:
      - pg-data-volume:/var/lib/postgresql/data
      # - ${HOME}/Downloads:/opt/downloads
      # load example:
      # uncomment the ${HOME}/Downloads and replace with your own desired location
      # psql -U postgres -c 'create database djaerolith_prod_backup'
      # psql -U postgres djaerolith_prod_backup < /opt/downloads/backup_20190818-050001.sql
    expose:
      - 5432
    ports:
      - 5437:5432
    networks:
      aeronet:


  app:
    env_file:
      - ./webolith/config/local_config.env
    build: ./webolith
    working_dir: /opt/webolith/djAerolith
    volumes:
      - ./webolith:/opt/webolith:rw
    depends_on:
      - pgdb
      - word_db_server
    links:
      - pgdb
    command: python manage.py runserver 0.0.0.0:8000
    networks:
      - aeronet
    labels:
      - "traefik.http.routers.aerolith.rule=Host(`aerolith.localhost`)"
      - "traefik.http.routers.aerolith.entrypoints=web"
      - "traefik.http.services.aerolith.loadbalancer.server.port=8000"
      - traefik.enable=true

  # tetrolith_fe:
  #   build:
  #     context: ../tetrolith/web
  #   volumes:
  #     - ../tetrolith/web:/usr/share/nginx/html
  #   networks:
  #     - aeronet
  #   labels:
  #     - "traefik.http.routers.tetrolith-fe.rule=Host(`aerolith.localhost`) && PathPrefix(`/tetrolith`)"
  #     - "traefik.http.routers.tetrolith-fe.middlewares=tetrolith-fe-stripprefix"
  #     - "traefik.http.middlewares.tetrolith-fe-stripprefix.stripprefix.prefixes=/tetrolith"
  #     - "traefik.http.routers.tetrolith-fe.entrypoints=web"
  #     - "traefik.http.services.tetrolith-fe.loadbalancer.server.port=80"
  #     - traefik.enable=true

  # tetrolith_be:
  #   build:
  #     context: ../tetrolith
  #     dockerfile: Dockerfile-dev
  #   environment:
  #     WORD_DB_SERVER_ADDRESS: http://word_db_server:8180
  #     # SECRET_KEY is the same as the one in webolith:
  #     SECRET_KEY: "0gc6=82_ehrw-@fv1a8dqq^6%zuxxu)f^5belgu68cuu*zr&qu"
  #   volumes:
  #     - ../tetrolith:/opt/program:rw
  #   command: ["go", "run", "-race", "cmd/server/main.go"]
  #   networks:
  #     - aeronet
  #   labels:
  #     - "traefik.http.routers.tetrolith-be.rule=Host(`aerolith.localhost`) && PathPrefix(`/tetrolith/ws`)"
  #     - "traefik.http.routers.tetrolith-be.middlewares=tetrolith-be-stripprefix"
  #     - "traefik.http.middlewares.tetrolith-be-stripprefix.stripprefix.prefixes=/tetrolith"
  #     - "traefik.http.routers.tetrolith-be.entrypoints=web"
  #     - "traefik.http.services.tetrolith-be.loadbalancer.server.port=8087"
  #     - traefik.enable=true

  proxy:
    image: "traefik:v2.2"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - aeronet

  word_db_server:
    build:
      context: ./word_db_server
      dockerfile: Dockerfile-dev
    environment:
      WDB_DATA_PATH: /opt/data
      LOG_LEVEL: debug
    volumes:
      - ./lexica:/opt/data/lexica
      - ./letterdistributions:/opt/data/letterdistributions
      - ./word_db_server:/opt/word_db_server:rw
    command: sh -c "go run -race cmd/searchserver/*.go"
    ports:
      - "18180:8180"
    networks:
      - aeronet
    labels:
      - "traefik.http.routers.word_db_server.rule=Host(`aerolith.localhost`) && PathPrefix(`/word_db_server/`)"
      - "traefik.http.routers.word_db_server.middlewares=word_db_server-stripprefix"
      - "traefik.http.middlewares.word_db_server-stripprefix.stripprefix.prefixes=/word_db_server/"
      - "traefik.http.routers.word_db_server.entrypoints=web"
      - "traefik.http.services.word_db_server.loadbalancer.server.port=8180"
      - traefik.enable=true

  frontend:
    build:
      context: ./webolith
      dockerfile: frontend.dockerfile
    volumes:
      - ./webolith:/opt/webolith:rw
    command: bash -c "npm ci && npm run dev -- --host"
    working_dir: /opt/webolith
    networks:
      - aeronet
    labels:
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"  # Vite port
      - "traefik.http.routers.frontend.rule=Host(`aerolith.localhost`) && PathPrefix(`/static/`)"
      - traefik.enable=true
    ports:
      - "5173:5173"

volumes:
  pg-data-volume:
    external: false

networks:
  aeronet:
    driver: bridge
